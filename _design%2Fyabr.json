{
    "value": {
        "rev": "10-630db0f814780e3f8d875247af1ea42f"
    },
    "doc": {
        "_id": "_design/yabr",
        "_rev": "10-630db0f814780e3f8d875247af1ea42f",
        "views": {
            "collections": {
                "map": "function(doc) {\n\tif (doc.doctype==\"collection\") {\n\t\tvar items = new Array();\n\t\t\n\t\t// For users with no items in their collection, the result will be an empty list\n\t\tif (+doc[\"@totalitems\"] > 0) {\n\t\t\t// For users with only one item, we create a container_item that is an array with one element\n\t\t\tif (+doc[\"@totalitems\"] == 1) {\n\t\t\t\tvar container_item = new Array();\n\t\t\t\tcontainer_item.push(doc.item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontainer_item = doc.item;\n\t\t\t}\n\t\n\t\t\t// Include only things that are boardgames; push them onto the items array\n\t\t\tfor (var i in container_item) {\n\t\t\t\tif (container_item[i][\"@objecttype\"] == \"thing\" && container_item[i][\"@subtype\"] == \"boardgame\") {\n\t\t\t\t\titem = {\n\t\t\t\t\t\t\tcollid: container_item[i][\"@collid\"],\n\t\t\t\t\t\t\tobjectid: container_item[i][\"@objectid\"],\n\t\t\t\t\t\t\tname: container_item[i].name[\"#text\"],\n\t\t\t\t\t\t\tnumplays: container_item[i].numplays,\n\t\t\t\t\t\t\tstats: container_item[i].stats,\n\t\t\t\t\t\t\tstatus: container_item[i].status,\n\t\t\t\t\t\t\tyearpublished: container_item[i].yearpublished\n\t\t\t\t\t\t\t};\n\t\t\t\t\titems.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\temit(doc[\"@username\"], items);\n\t}\n}"
            },
            "users": {
                "reduce": "function(keys, values) {\n\treturn sum(values);\n}\n",
                "map": "function(doc) {\n\tif (doc.doctype==\"thread\") {\n\t\t// If this key exists, it's a single article thread\n\t\tif (doc.articles.article[\"@username\"]) {\n\t\t\temit(doc.articles.article[\"@username\"], 1);\n\t\t}\n\t\t// For multi-article threads, repeat for each article\n\t\telse {\n\t\t\tfor (var i in doc.articles.article) {\n\t\t\t\temit(doc.articles.article[i][\"@username\"], 1);\n\t\t\t}\n\t\t}\n\t}\n}"
            },
            "threads": {
                "map": "function(doc) {\n\tif (doc.doctype==\"thread\") {\n\t\tif (doc[\"@id\"] && doc[\"@numarticles\"]) {\n\t\t\temit(+doc[\"@id\"], +doc[\"@numarticles\"]);\n\t\t}\n\t\telse {\n\t\t\temit(doc._id, -1)\n\t\t}\n\t}\n}\n"
            },
            "collections_userratings": {
                "map": "function(doc) {\n\tif (doc.doctype==\"collection\") {\n\t\tvar items = {};\n\t\t\n\t\t// For users with no items in their collection, the result will be an empty dictionary\n\t\tif (+doc[\"@totalitems\"] > 0) {\n\t\t\n\t\t\t// For users with only one item, we create a container_item that is an array with one element\n\t\t\t// This allows us to use the same logic as with > 1 item\n\t\t\tif (+doc[\"@totalitems\"] == 1) {\n\t\t\t\tvar container_item = new Array();\n\t\t\t\tcontainer_item.push(doc.item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontainer_item = doc.item;\n\t\t\t}\n\t\n\t\t\t// Include only things that are boardgames; add each as a dictionary to the items dictionary\n\t\t\tfor (var i in container_item) {\n\t\t\t\n\t\t\t\tif (container_item[i][\"@objecttype\"] == \"thing\" && container_item[i][\"@subtype\"] == \"boardgame\") {\n\t\t\t\t\t// The thing's objectid will serve as the key for the dictionary\n\t\t\t\t\tobjectid = container_item[i][\"@objectid\"]\n\t\t\t\t\t\n\t\t\t\t\t// Many users do not have personal ratings\n\t\t\t\t\tif (container_item[i].stats.rating[\"@value\"] != \"N/A\") {\n\t\t\t\t\t\tuser_rating = container_item[i].stats.rating[\"@value\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tuser_rating = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (user_rating !== null) {\n\t\t\t\t\t\titems[objectid] = Number(user_rating);\n\t\t\t\t\t} else {\n\t\t\t\t\t\titems[objectid] = user_rating;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\temit(doc[\"@username\"], items);\n\t}\n}"
            },
            "boardgames": {
                "map": "function(doc) {\n\tif (doc.doctype==\"thing\") {\n\t\tif (doc[\"@type\"] == \"boardgame\") {\n\n\t\t\tvar name = new String();\n\n\t\t\tif (doc.name[\"@value\"]) {\n\t\t\t\tname = doc.name[\"@value\"];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (var i in doc.name) {\n\t\t\t\t\tif (doc.name[i][\"@type\"] == \"primary\") {\n\t\t\t\t\t\tname = doc.name[i][\"@value\"];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar categories = new Array();\n\t\t\tvar mechanics = new Array();\n\t\t\tvar designers = new Array();\n\t\t\tvar publishers = new Array();\n\t\t\tvar families = new Array();\n\n\t\t\tfor (var i in doc.link) {\n\t\t\t\tswitch(doc.link[i][\"@type\"]) {\n\t\t\t\t\tcase \"boardgamecategory\":\n\t\t\t\t\t\tcategories.push(doc.link[i][\"@value\"]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"boardgamemechanic\":\n\t\t\t\t\t\tmechanics.push(doc.link[i][\"@value\"]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"boardgamedesigner\":\n\t\t\t\t\t\tdesigners.push(doc.link[i][\"@value\"]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"boardgamepublisher\":\n\t\t\t\t\t\tpublishers.push(doc.link[i][\"@value\"]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"boardgamefamily\":\n\t\t\t\t\t\tfamilies.push(doc.link[i][\"@value\"]);\n\t\t\t\t\t\tbreak;\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\temit(doc._id, {\n\t\t\t\tbgg_id: doc[\"@id\"],\n\t\t\t\tname: name,\n\t\t\t\tdescription: doc.description,\n\t\t\t\tminplayers: doc.minplayers[\"@value\"],\n\t\t\t\tmaxplayers: doc.maxplayers[\"@value\"],\n\t\t\t\tminplaytime: doc.minplaytime[\"@value\"],\n\t\t\t\tplayingtime: doc.playingtime[\"@value\"],\n\t\t\t\tmaxplaytime: doc.maxplaytime[\"@value\"],\n\t\t\t\tminage: doc.minage[\"@value\"],\n\t\t\t\tyear: doc.yearpublished[\"@value\"],\n\t\t\t\tcategories: categories,\n\t\t\t\tmechanics: mechanics,\n\t\t\t\tdesigners: designers,\n\t\t\t\tpublishers: publishers,\n\t\t\t\tfamilies: families\n\t\t\t});\n\t\t}\n\t}\n}"
            },
            "collections_revs": {
                "map": "function(doc) {\n\tif (doc.doctype==\"collection\") {\n\t\temit(null, doc._rev);\n\t}\n}\n\n"
            },
            "boardgames_ratings": {
                "reduce": "function(keys, values) {\n\t// First set output equal to stats from first element in values\n\tvar average = values[0].average;\n\tvar bayesaverage = values[0].bayesaverage;\n\tvar median = values[0].median;\n\tvar stddev = values[0].stddev;\n\tvar usersrated = values[0].usersrated;\n\n\t// Check each value to see if it has a higher usersrated (and thus is later)\n\t// If so, use those stats instead\n\tfor (var i in values) {\n\t\tif (values[i].usersrated > usersrated) {\n\t\t\tusersrated = values[i].usersrated;\n\t\t\taverage = values[i].average;\n\t\t\tbayesaverage = values[i].bayesaverage;\n\t\t\tmedian = values[i].median;\n\t\t\tstddev = values[i].stddev;\n\t\t\tusersrated = values[i].usersrated;\n\t\t}\n\t}\n\n\tvar rating = {\n\t\taverage: average,\n\t\tbayesaverage: bayesaverage,\n\t\tmedian: median,\n\t\tstddev: stddev,\n\t\tusersrated: usersrated\n\t}\n\treturn rating;\n}",
                "map": "function(doc) {\n\tif (doc.doctype==\"collection\") {\n\t\t\n\t\t// For users with no items in their collection, we want no output\n\t\tif (+doc[\"@totalitems\"] > 0) {\n\t\t\n\t\t\t// For users with only one item, we create a container_item that is an array with one element\n\t\t\t// This allows us to use the same logic as with > 1 item\n\t\t\tif (+doc[\"@totalitems\"] == 1) {\n\t\t\t\tvar container_item = new Array();\n\t\t\t\tcontainer_item.push(doc.item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontainer_item = doc.item;\n\t\t\t}\n\t\n\t\t\t// Include only things that are boardgames; add each as a dictionary to the items dictionary\n\t\t\tfor (var i in container_item) {\n\t\t\t\n\t\t\t\tif (container_item[i][\"@objecttype\"] == \"thing\" && container_item[i][\"@subtype\"] == \"boardgame\") {\n\t\t\t\t\t// The thing's objectid will serve as the key for the dictionary\n\t\t\t\t\tvar objectid = Number(container_item[i][\"@objectid\"]);\n\t\t\t\t\t\n\t\t\t\t\tvar rating = {\n\t\t\t\t\t\taverage: Number(container_item[i].stats.rating.average[\"@value\"]),\n\t\t\t\t\t\tbayesaverage: Number(container_item[i].stats.rating.bayesaverage[\"@value\"]),\n\t\t\t\t\t\tmedian: Number(container_item[i].stats.rating.median[\"@value\"]),\n\t\t\t\t\t\tstddev: Number(container_item[i].stats.rating.stddev[\"@value\"]),\n\t\t\t\t\t\tusersrated: Number(container_item[i].stats.rating.usersrated[\"@value\"])\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\temit(objectid, rating);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
            },
            "collections_totalitems": {
                "map": "function(doc) {\n\tif (doc.doctype==\"collection\") {\n\t\temit(doc[\"@username\"], +doc[\"@totalitems\"]);\n\t}\n}\n"
            }
        },
        "language": "javascript"
    },
    "id": "_design/yabr",
    "key": "_design/yabr"
}